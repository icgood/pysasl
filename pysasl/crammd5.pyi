
from . import AuthenticationCredentials, ClientMechanism, ServerMechanism, \
    ServerChallenge, ClientResponse
from typing import Union, Sequence


class CramMD5Result(AuthenticationCredentials):
    challenge: bytes = ...
    digest: bytes = ...
    def __init__(self, username: str, challenge: bytes,
                 digest: bytes) -> None: ...
    @property
    def secret(self) -> str: ...
    def check_secret(self, secret: Union[bytes, str]) -> bool: ...

class CramMD5Mechanism(ServerMechanism, ClientMechanism):
    @property
    def name(self) -> bytes: ...
    @property
    def priority(self) -> int: ...
    def server_attempt(self, challenges: Sequence[ServerChallenge]) \
            -> AuthenticationCredentials: ...
    def client_attempt(self, creds: AuthenticationCredentials,
                       responses: Sequence[ClientResponse]) \
            -> ClientResponse: ...
